#!/usr/bin/env python3.4
"""	
This program used to translate English into
Chinese or translate Chinese into English.
"""

import json
import argparse
from urllib import request
from urllib.request import quote

parser = argparse.ArgumentParser()

# Conflicting options
group = parser.add_mutually_exclusive_group()
group.add_argument('-v','--verbose',action='store_true',help="Verbose output")
group.add_argument('-q','--quiet',action='store_true',help='Quiet output(Default)')

# Conflicting options
group2 = parser.add_mutually_exclusive_group()
group2.add_argument('-e','--english',action='store_true',help='The word is English(Default)',default=True)
group2.add_argument('-z','--chinese',action='store_true',help='The word is Chinese')

parser.add_argument('word',help="The word that to be translated")

args = parser.parse_args()
word = args.word

# The word is English
if args.chinese:
	# convert unicode to ascii
	word = quote(word)

	url = 'https://glosbe.com/gapi/translate?from=zho&dest=eng&format=json&phrase=' + word + '&pretty=true'
# The word is Chinese
else:
	url = 'https://glosbe.com/gapi/translate?from=eng&dest=zho&format=json&phrase=' + word + '&pretty=true'

req = request.urlopen(url)
encoding = req.headers.get_content_charset()
results = json.loads(req.read().decode(encoding))

# Verbose mode
if args.verbose:
	for result in results["tuc"]:
		if "phrase" in result:
			print(result["phrase"]["text"],end=', ')
		elif "meanings" in result:
			print('\b\b \n')
			print(result["meanings"][0]["text"],end=', ')
	print('\b\b \n')
# Quiet mode
else:
	for result in results["tuc"]:
		if "phrase" in result:
			print(result["phrase"]["text"],end=', ')
		else:
			break
	print('\b\b \n')
